<%- include('../header') %>

<div class="tetris-page">
    <!-- Game Header -->
    <div class="game-header">
        <div class="container">
            <div class="header-content">
                <div class="game-title">
                    <h1>🎮 테트리스 마스터</h1>
                    <p>클래식한 테트리스 게임을 현대적으로 즐겨보세요!</p>
                </div>
                <div class="game-actions">
                    <button id="fullscreen-btn" class="btn btn-outline">
                        <span class="btn-icon">🖥️</span>
                        전체화면
                    </button>
                    <button id="sound-toggle" class="btn btn-outline">
                        <span class="btn-icon">🔊</span>
                        소리
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="game-layout">
            <!-- Game Area -->
            <div class="game-main">
                <div class="game-container">
                    <!-- Game Board -->
                    <div class="game-board-section">
                        <div class="board-wrapper">
                            <canvas id="tetris-canvas" width="300" height="600"></canvas>
                            <div class="game-overlay" id="game-overlay">
                                <div class="overlay-content">
                                    <h2 id="overlay-title">테트리스 시작</h2>
                                    <p id="overlay-message">준비되셨나요?</p>
                                    <button id="start-game-btn" class="btn btn-primary btn-large">
                                        <span class="btn-icon">🚀</span>
                                        게임 시작
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Game Info Panel -->
                    <div class="game-info-panel">
                        <!-- Score Board -->
                        <div class="score-board">
                            <div class="score-item">
                                <div class="score-label">점수</div>
                                <div class="score-value" id="score">0</div>
                            </div>
                            <div class="score-item">
                                <div class="score-label">레벨</div>
                                <div class="score-value" id="level">1</div>
                            </div>
                            <div class="score-item">
                                <div class="score-label">라인</div>
                                <div class="score-value" id="lines">0</div>
                            </div>
                        </div>

                        <!-- Next Piece -->
                        <div class="next-piece-container">
                            <h3>다음 블록</h3>
                            <canvas id="next-piece" width="120" height="120"></canvas>
                        </div>

                        <!-- High Score -->
                        <div class="high-score-container">
                            <h3>최고 기록</h3>
                            <div class="high-score" id="high-score">0</div>
                            <div class="high-score-name" id="high-score-name">-</div>
                        </div>
                    </div>
                </div>

                <!-- Game Controls -->
                <div class="game-controls">
                    <div class="control-section">
                        <h3>⌨️ 키보드 조작</h3>
                        <div class="keyboard-controls">
                            <div class="key-group">
                                <kbd>←</kbd><kbd>→</kbd>
                                <span>좌우 이동</span>
                            </div>
                            <div class="key-group">
                                <kbd>↓</kbd>
                                <span>빠르게 내리기</span>
                            </div>
                            <div class="key-group">
                                <kbd>↑</kbd><kbd>Space</kbd>
                                <span>회전</span>
                            </div>
                            <div class="key-group">
                                <kbd>P</kbd>
                                <span>일시정지</span>
                            </div>
                        </div>
                    </div>

                    <div class="control-buttons">
                        <button id="pause-btn" class="btn btn-secondary">
                            <span class="btn-icon">⏸️</span>
                            일시정지
                        </button>
                        <button id="restart-btn" class="btn btn-outline">
                            <span class="btn-icon">🔄</span>
                            재시작
                        </button>
                        <button id="quit-btn" class="btn btn-danger">
                            <span class="btn-icon">❌</span>
                            게임 종료
                        </button>
                    </div>
                </div>

                <!-- Mobile Controls -->
                <div class="mobile-controls" id="mobile-controls">
                    <div class="mobile-control-header">
                        <h3>📱 터치 컨트롤</h3>
                    </div>
                    <div class="mobile-buttons">
                        <div class="movement-controls">
                            <button class="control-btn" id="mobile-left">
                                <span>←</span>
                            </button>
                            <button class="control-btn" id="mobile-rotate">
                                <span>↻</span>
                            </button>
                            <button class="control-btn" id="mobile-right">
                                <span>→</span>
                            </button>
                        </div>
                        <button class="control-btn drop-btn" id="mobile-down">
                            <span>⬇️ 빠르게 내리기</span>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="game-sidebar">
                <!-- Rankings -->
                <div class="sidebar-section rankings">
                    <h3>🏆 실시간 랭킹</h3>
                    <div class="ranking-list" id="ranking-list">
                        <div class="loading">랭킹을 불러오는 중...</div>
                    </div>
                </div>

                <!-- Game Tips -->
                <div class="sidebar-section tips">
                    <h3>💡 게임 팁</h3>
                    <div class="tip-list">
                        <div class="tip-item">
                            <span class="tip-icon">⚡</span>
                            <span>T-스핀을 활용하면 더 높은 점수를 얻을 수 있어요!</span>
                        </div>
                        <div class="tip-item">
                            <span class="tip-icon">🎯</span>
                            <span>테트리스(4줄 동시 제거)를 노려보세요!</span>
                        </div>
                        <div class="tip-item">
                            <span class="tip-icon">🏃</span>
                            <span>레벨이 올라갈수록 블록이 빨라집니다!</span>
                        </div>
                    </div>
                </div>

                <!-- Stats -->
                <div class="sidebar-section stats">
                    <h3>📊 게임 통계</h3>
                    <div class="stat-grid">
                        <div class="stat-item">
                            <div class="stat-value" id="total-plays">0</div>
                            <div class="stat-label">총 플레이</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="total-lines">0</div>
                            <div class="stat-label">총 라인</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Game Over Modal -->
    <div id="game-over-modal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>🎮 게임 오버!</h2>
            </div>
            <div class="modal-body">
                <div class="final-stats">
                    <div class="stat">
                        <span class="label">최종 점수</span>
                        <span class="value" id="final-score">0</span>
                    </div>
                    <div class="stat">
                        <span class="label">레벨</span>
                        <span class="value" id="final-level">1</span>
                    </div>
                    <div class="stat">
                        <span class="label">제거한 줄</span>
                        <span class="value" id="final-lines">0</span>
                    </div>
                </div>
                
                <div class="score-input" id="score-input" style="display: none;">
                    <h3>🏆 새로운 기록입니다!</h3>
                    <div class="form-group">
                        <label for="player-name">닉네임을 입력하세요:</label>
                        <input type="text" id="player-name" maxlength="10" placeholder="익명">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="play-again-btn" class="btn btn-primary">
                    <span class="btn-icon">🔄</span>
                    다시 플레이
                </button>
                <button id="save-score-btn" class="btn btn-success" style="display: none;">
                    <span class="btn-icon">💾</span>
                    점수 저장
                </button>
                <button id="share-score-btn" class="btn btn-outline">
                    <span class="btn-icon">📤</span>
                    공유하기
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Enhanced CSS -->
<style>
/* Page Layout */
.tetris-page {
    min-height: 100vh;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    padding-bottom: 2rem;
}

.game-header {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    padding: 2rem 0;
    color: white;
}

.header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.game-title h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
}

.game-actions {
    display: flex;
    gap: 1rem;
}

/* Game Layout */
.game-layout {
    display: grid;
    grid-template-columns: 1fr 300px;
    gap: 2rem;
    margin: 2rem 0;
}

.game-main {
    background: rgba(255, 255, 255, 0.95);
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
}

/* Game Container */
.game-container {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: 2rem;
    margin-bottom: 2rem;
}

.board-wrapper {
    position: relative;
    background: #000;
    border-radius: 15px;
    overflow: hidden;
    border: 3px solid #333;
}

#tetris-canvas {
    display: block;
    background: #000;
}

/* Game Overlay */
.game-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.9);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    text-align: center;
}

.overlay-content h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
}

.overlay-content p {
    margin-bottom: 2rem;
    opacity: 0.8;
}

/* Info Panel */
.game-info-panel {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.score-board {
    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    color: white;
    padding: 1.5rem;
    border-radius: 15px;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
}

.score-item {
    text-align: center;
}

.score-label {
    font-size: 0.9rem;
    opacity: 0.8;
    margin-bottom: 0.5rem;
}

.score-value {
    font-size: 1.8rem;
    font-weight: bold;
}

.next-piece-container,
.high-score-container {
    background: white;
    border-radius: 15px;
    padding: 1.5rem;
    text-align: center;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.next-piece-container h3,
.high-score-container h3 {
    margin-bottom: 1rem;
    color: #333;
}

#next-piece {
    border: 2px solid #eee;
    border-radius: 8px;
    background: #f8f9fa;
}

.high-score {
    font-size: 2rem;
    font-weight: bold;
    color: #ff6b6b;
    margin-bottom: 0.5rem;
}

.high-score-name {
    color: #666;
    font-size: 0.9rem;
}

/* Game Controls */
.game-controls {
    background: #f8f9fa;
    border-radius: 15px;
    padding: 2rem;
    margin-bottom: 2rem;
}

.control-section h3 {
    margin-bottom: 1rem;
    color: #333;
}

.keyboard-controls {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
    margin-bottom: 2rem;
}

.key-group {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.key-group kbd {
    background: #333;
    color: white;
    padding: 0.3rem 0.6rem;
    border-radius: 5px;
    font-family: monospace;
    min-width: 2rem;
    text-align: center;
}

.control-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
}

/* Mobile Controls */
.mobile-controls {
    background: #f8f9fa;
    border-radius: 15px;
    padding: 2rem;
    display: none;
}

.mobile-control-header {
    text-align: center;
    margin-bottom: 1.5rem;
}

.movement-controls {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    margin-bottom: 1rem;
}

.control-btn {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    border-radius: 15px;
    padding: 1.5rem;
    font-size: 1.5rem;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
}

.control-btn:active {
    transform: scale(0.95);
    box-shadow: 0 2px 10px rgba(102, 126, 234, 0.5);
}

.drop-btn {
    grid-column: span 3;
    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
    box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
}

/* Sidebar */
.game-sidebar {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.sidebar-section {
    background: rgba(255, 255, 255, 0.95);
    border-radius: 15px;
    padding: 1.5rem;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.sidebar-section h3 {
    margin-bottom: 1rem;
    color: #333;
}

/* Rankings */
.ranking-list {
    max-height: 300px;
    overflow-y: auto;
}

.ranking-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem;
    margin-bottom: 0.5rem;
    background: #f8f9fa;
    border-radius: 8px;
}

.ranking-position {
    font-weight: bold;
    color: #007bff;
}

.ranking-score {
    font-weight: bold;
    color: #28a745;
}

/* Tips */
.tip-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.tip-item {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    padding: 1rem;
    background: #f8f9fa;
    border-radius: 10px;
    border-left: 4px solid #007bff;
}

.tip-icon {
    font-size: 1.2rem;
}

/* Stats */
.stat-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
}

.stat-item {
    text-align: center;
    padding: 1rem;
    background: #f8f9fa;
    border-radius: 10px;
}

.stat-value {
    font-size: 1.5rem;
    font-weight: bold;
    color: #007bff;
}

.stat-label {
    font-size: 0.8rem;
    color: #666;
    margin-top: 0.25rem;
}

/* Modal */
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(5px);
}

.modal-content {
    background: white;
    margin: 5% auto;
    padding: 0;
    border-radius: 20px;
    width: 90%;
    max-width: 500px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
    overflow: hidden;
}

.modal-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 2rem;
    text-align: center;
}

.modal-body {
    padding: 2rem;
}

.final-stats {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    margin-bottom: 2rem;
}

.final-stats .stat {
    text-align: center;
    padding: 1rem;
    background: #f8f9fa;
    border-radius: 10px;
}

.final-stats .label {
    display: block;
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 0.5rem;
}

.final-stats .value {
    display: block;
    font-size: 1.8rem;
    font-weight: bold;
    color: #007bff;
}

.modal-footer {
    padding: 1.5rem 2rem;
    background: #f8f9fa;
    display: flex;
    gap: 1rem;
    justify-content: center;
}

/* Button Styles */
.btn {
    border: none;
    border-radius: 10px;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
}

.btn-large {
    padding: 1rem 2rem;
    font-size: 1.1rem;
}

.btn-primary {
    background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
    color: white;
}

.btn-secondary {
    background: linear-gradient(135deg, #6c757d 0%, #545b62 100%);
    color: white;
}

.btn-success {
    background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
    color: white;
}

.btn-danger {
    background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
    color: white;
}

.btn-outline {
    background: transparent;
    color: white;
    border: 2px solid white;
}

.btn-outline:hover {
    background: white;
    color: #333;
}

/* Responsive Design */
@media (max-width: 1024px) {
    .game-layout {
        grid-template-columns: 1fr;
    }
    
    .game-sidebar {
        order: 2;
    }
}

@media (max-width: 768px) {
    .game-container {
        grid-template-columns: 1fr;
    }
    
    .board-wrapper {
        margin: 0 auto;
    }
    
    .score-board {
        grid-template-columns: 1fr;
    }
    
    .mobile-controls {
        display: block;
    }
    
    .keyboard-controls {
        display: none;
    }
    
    .header-content {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
    }
}

@media (max-width: 480px) {
    #tetris-canvas {
        width: 250px;
        height: 500px;
    }
    
    .game-main {
        padding: 1rem;
    }
    
    .final-stats {
        grid-template-columns: 1fr;
    }
}

/* Loading Animation */
.loading {
    text-align: center;
    color: #666;
    font-style: italic;
}

/* Success Animation */
@keyframes celebration {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
}

.celebration {
    animation: celebration 0.5s ease-in-out;
}
</style>

<!-- Include the enhanced Tetris JavaScript -->
<script src="/js/tetris.js"></script>

<!-- Additional game features script -->
<script>
// Enhanced game features
document.addEventListener('DOMContentLoaded', () => {
    // Load high scores
    loadHighScores();
    
    // Load game statistics
    loadGameStats();
    
    // Setup additional event listeners
    setupGameFeatures();
});

// Load high scores from server
async function loadHighScores() {
    try {
        const response = await fetch('/game/rankings?game=tetris&limit=10');
        const rankings = await response.json();
        
        const rankingList = document.getElementById('ranking-list');
        if (rankings.length > 0) {
            rankingList.innerHTML = rankings.map((rank, index) => `
                <div class="ranking-item">
                    <span class="ranking-position">#${index + 1}</span>
                    <span class="ranking-name">${rank.playerName || '익명'}</span>
                    <span class="ranking-score">${rank.score.toLocaleString()}</span>
                </div>
            `).join('');
        } else {
            rankingList.innerHTML = '<div class="loading">아직 기록이 없습니다</div>';
        }
    } catch (error) {
        console.error('랭킹 로드 실패:', error);
    }
}

// Load game statistics
function loadGameStats() {
    const totalPlays = localStorage.getItem('tetris-total-plays') || 0;
    const totalLines = localStorage.getItem('tetris-total-lines') || 0;
    
    document.getElementById('total-plays').textContent = totalPlays;
    document.getElementById('total-lines').textContent = totalLines;
}

// Setup additional game features
function setupGameFeatures() {
    // Fullscreen toggle
    document.getElementById('fullscreen-btn').addEventListener('click', toggleFullscreen);
    
    // Sound toggle
    document.getElementById('sound-toggle').addEventListener('click', toggleSound);
    
    // Share score
    document.getElementById('share-score-btn').addEventListener('click', shareScore);
    
    // Save score
    document.getElementById('save-score-btn').addEventListener('click', saveScore);
    
    // Load high score display
    const highScore = localStorage.getItem('tetrisHighScore') || 0;
    const highScoreName = localStorage.getItem('tetrisHighScoreName') || '-';
    document.getElementById('high-score').textContent = parseInt(highScore).toLocaleString();
    document.getElementById('high-score-name').textContent = highScoreName;
}

// Fullscreen functionality
function toggleFullscreen() {
    if (!document.fullscreenElement) {
        document.documentElement.requestFullscreen();
        document.getElementById('fullscreen-btn').innerHTML = '<span class="btn-icon">🪟</span>나가기';
    } else {
        document.exitFullscreen();
        document.getElementById('fullscreen-btn').innerHTML = '<span class="btn-icon">🖥️</span>전체화면';
    }
}

// Sound toggle functionality
let soundEnabled = true;
function toggleSound() {
    soundEnabled = !soundEnabled;
    const btn = document.getElementById('sound-toggle');
    btn.innerHTML = soundEnabled ? 
        '<span class="btn-icon">🔊</span>소리' : 
        '<span class="btn-icon">🔇</span>소리';
    
    localStorage.setItem('tetris-sound-enabled', soundEnabled);
}

// Share score functionality
function shareScore() {
    const score = document.getElementById('final-score').textContent;
    const level = document.getElementById('final-level').textContent;
    
    if (navigator.share) {
        navigator.share({
            title: 'WonGram Shop 테트리스',
            text: `테트리스에서 ${score}점을 달성했습니다! (레벨 ${level})`,
            url: window.location.href
        });
    } else {
        // Fallback to clipboard
        const text = `테트리스에서 ${score}점을 달성했습니다! (레벨 ${level}) - ${window.location.href}`;
        navigator.clipboard.writeText(text).then(() => {
            alert('클립보드에 복사되었습니다!');
        });
    }
}

// Save score functionality
async function saveScore() {
    const playerName = document.getElementById('player-name').value || '익명';
    const score = parseInt(document.getElementById('final-score').textContent);
    const level = parseInt(document.getElementById('final-level').textContent);
    const lines = parseInt(document.getElementById('final-lines').textContent);
    
    try {
        const response = await fetch('/game/score', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                game: 'tetris',
                playerName,
                score,
                level,
                lines
            })
        });
        
        if (response.ok) {
            // Update high score if needed
            const currentHigh = parseInt(localStorage.getItem('tetrisHighScore') || 0);
            if (score > currentHigh) {
                localStorage.setItem('tetrisHighScore', score);
                localStorage.setItem('tetrisHighScoreName', playerName);
                document.getElementById('high-score').textContent = score.toLocaleString();
                document.getElementById('high-score-name').textContent = playerName;
            }
            
            // Reload rankings
            loadHighScores();
            
            // Hide save button and show success
            document.getElementById('save-score-btn').style.display = 'none';
            document.getElementById('score-input').innerHTML = '<h3>✅ 점수가 저장되었습니다!</h3>';
        }
    } catch (error) {
        console.error('점수 저장 실패:', error);
        alert('점수 저장에 실패했습니다.');
    }
}

// Initialize sound setting
document.addEventListener('DOMContentLoaded', () => {
    const savedSoundSetting = localStorage.getItem('tetris-sound-enabled');
    if (savedSoundSetting !== null) {
        soundEnabled = savedSoundSetting === 'true';
        const btn = document.getElementById('sound-toggle');
        btn.innerHTML = soundEnabled ? 
            '<span class="btn-icon">🔊</span>소리' : 
            '<span class="btn-icon">🔇</span>소리';
    }
});
</script>

<%- include('../footer') %>
